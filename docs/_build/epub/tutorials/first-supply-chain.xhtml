<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" /><meta name="viewport" content="width=device-width, initial-scale=1" />

    <title>Your First Supply Chain Application</title>
    <link rel="stylesheet" type="text/css" href="../_static/pygments.css?v=8e8a900e" />
    <link rel="stylesheet" type="text/css" href="../_static/epub.css?v=1d6d279e" />
    <link rel="stylesheet" type="text/css" href="../_static/copybutton.css?v=76b2166b" />
    <link rel="stylesheet" type="text/css" href="../_static/custom.css?v=3afbad45" />
    <link rel="stylesheet" type="text/css" href="../_static/interactive.css?v=267755d7" /> 
  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <section id="your-first-supply-chain-application">
<h1>Your First Supply Chain Application</h1>
<p>This tutorial will guide you through building your first supply chain traceability application with ProvChainOrg. You’ll learn how to track a product from farm to consumer using semantic blockchain technology.</p>
<section id="what-you-ll-build">
<h2>What You’ll Build</h2>
<p>By the end of this tutorial, you’ll have:</p>
<ul class="simple">
<li><p>✅ A working ProvChainOrg node</p></li>
<li><p>✅ Supply chain data stored as RDF graphs</p></li>
<li><p>✅ SPARQL queries to trace product provenance</p></li>
<li><p>✅ A web interface to visualize the supply chain</p></li>
</ul>
</section>
<section id="prerequisites">
<h2>Prerequisites</h2>
<p>Before starting, ensure you have:</p>
<ul class="simple">
<li><p><strong>Rust 1.70+</strong>: <cite>rustc –version</cite></p></li>
<li><p><strong>Git</strong>: For cloning the repository</p></li>
<li><p><strong>Basic terminal knowledge</strong>: Running commands and editing files</p></li>
</ul>
<div class="admonition note">
<p class="admonition-title">Note</p>
<p>This tutorial takes approximately 30 minutes to complete.</p>
</div>
</section>
<section id="step-1-installation-and-setup">
<h2>Step 1: Installation and Setup</h2>
<section id="clone-and-build-provchainorg">
<h3>Clone and Build ProvChainOrg</h3>
<div class="highlight-bash notranslate"><div class="highlight"><pre><span></span><span class="c1"># Clone the repository</span>
git<span class="w"> </span>clone<span class="w"> </span>https://github.com/anusornc/provchain-org.git
<span class="nb">cd</span><span class="w"> </span>provchain-org

<span class="c1"># Build the project</span>
cargo<span class="w"> </span>build<span class="w"> </span>--release

<span class="c1"># Verify installation</span>
cargo<span class="w"> </span>run<span class="w"> </span>--<span class="w"> </span>--help
</pre></div>
</div>
<p>You should see the ProvChainOrg command-line interface help.</p>
</section>
<section id="explore-the-demo-data">
<h3>Explore the Demo Data</h3>
<p>ProvChainOrg comes with sample supply chain data:</p>
<div class="highlight-bash notranslate"><div class="highlight"><pre><span></span><span class="c1"># View the sample RDF data</span>
cat<span class="w"> </span>demo_data/store.ttl
</pre></div>
</div>
<p>This file contains a complete supply chain scenario with:
- Product batches (organic tomatoes)
- Farm information
- Processing activities
- Environmental monitoring
- Quality certifications</p>
</section>
</section>
<section id="step-2-run-your-first-demo">
<h2>Step 2: Run Your First Demo</h2>
<section id="start-with-the-built-in-demo">
<h3>Start with the Built-in Demo</h3>
<div class="highlight-bash notranslate"><div class="highlight"><pre><span></span><span class="c1"># Run the complete demo</span>
cargo<span class="w"> </span>run<span class="w"> </span>demo
</pre></div>
</div>
<p>This command:
1. Initializes a new blockchain
2. Loads the sample supply chain data
3. Creates blocks with RDF graphs
4. Demonstrates SPARQL queries
5. Shows traceability results</p>
</section>
<section id="understanding-the-output">
<h3>Understanding the Output</h3>
<p>The demo output shows:</p>
<div class="highlight-text notranslate"><div class="highlight"><pre><span></span>🚀 ProvChainOrg Demo Starting...
📦 Loading supply chain data...
🔗 Creating blockchain blocks...
📊 Running traceability queries...

✅ Found 3 product batches
✅ Traced complete supply chain
✅ Verified environmental conditions
</pre></div>
</div>
</section>
</section>
<section id="step-3-explore-sparql-queries">
<h2>Step 3: Explore SPARQL Queries</h2>
<section id="basic-product-query">
<h3>Basic Product Query</h3>
<p>Query all products in the blockchain:</p>
<div class="highlight-bash notranslate"><div class="highlight"><pre><span></span><span class="c1"># Run a basic SPARQL query</span>
cargo<span class="w"> </span>run<span class="w"> </span>--<span class="w"> </span>query<span class="w"> </span>queries/trace_by_batch_ontology.sparql
</pre></div>
</div>
<p>This query finds all product batches and their basic information.</p>
</section>
<section id="custom-queries">
<h3>Custom Queries</h3>
<p>Create your own SPARQL query file:</p>
<div class="highlight-bash notranslate"><div class="highlight"><pre><span></span><span class="c1"># Create a new query file</span>
cat<span class="w"> </span>&gt;<span class="w"> </span>my_query.sparql<span class="w"> </span><span class="s">&lt;&lt; &#39;EOF&#39;</span>
<span class="s">PREFIX : &lt;http://example.org/supply-chain#&gt;</span>
<span class="s">PREFIX xsd: &lt;http://www.w3.org/2001/XMLSchema#&gt;</span>

<span class="s">SELECT ?batch ?product ?farm ?date WHERE {</span>
<span class="s">  ?batch a :ProductBatch ;</span>
<span class="s">         :product ?product ;</span>
<span class="s">         :originFarm ?farm ;</span>
<span class="s">         :harvestDate ?date .</span>
<span class="s">}</span>
<span class="s">ORDER BY ?date</span>
<span class="s">EOF</span>

<span class="c1"># Run your custom query</span>
cargo<span class="w"> </span>run<span class="w"> </span>--<span class="w"> </span>query<span class="w"> </span>my_query.sparql
</pre></div>
</div>
</section>
<section id="environmental-monitoring-query">
<h3>Environmental Monitoring Query</h3>
<p>Track environmental conditions during transport:</p>
<div class="highlight-bash notranslate"><div class="highlight"><pre><span></span><span class="c1"># Create environmental monitoring query</span>
cat<span class="w"> </span>&gt;<span class="w"> </span>environmental_query.sparql<span class="w"> </span><span class="s">&lt;&lt; &#39;EOF&#39;</span>
<span class="s">PREFIX : &lt;http://example.org/supply-chain#&gt;</span>

<span class="s">SELECT ?batch ?temperature ?humidity ?location ?timestamp WHERE {</span>
<span class="s">  ?batch :transportedThrough ?transport .</span>
<span class="s">  ?transport :environmentalCondition ?condition .</span>
<span class="s">  ?condition :temperature ?temperature ;</span>
<span class="s">             :humidity ?humidity ;</span>
<span class="s">             :location ?location ;</span>
<span class="s">             :recordedAt ?timestamp .</span>
<span class="s">}</span>
<span class="s">ORDER BY ?timestamp</span>
<span class="s">EOF</span>

<span class="c1"># Run the environmental query</span>
cargo<span class="w"> </span>run<span class="w"> </span>--<span class="w"> </span>query<span class="w"> </span>environmental_query.sparql
</pre></div>
</div>
</section>
</section>
<section id="step-4-add-your-own-data">
<h2>Step 4: Add Your Own Data</h2>
<section id="create-custom-supply-chain-data">
<h3>Create Custom Supply Chain Data</h3>
<p>Create a new RDF file with your own supply chain scenario:</p>
<div class="highlight-bash notranslate"><div class="highlight"><pre><span></span><span class="c1"># Create your own supply chain data</span>
cat<span class="w"> </span>&gt;<span class="w"> </span>my_supply_chain.ttl<span class="w"> </span><span class="s">&lt;&lt; &#39;EOF&#39;</span>
<span class="s">@prefix : &lt;http://example.org/supply-chain#&gt; .</span>
<span class="s">@prefix xsd: &lt;http://www.w3.org/2001/XMLSchema#&gt; .</span>

<span class="s"># Your farm</span>
<span class="s">:MyFarm a :OrganicFarm ;</span>
<span class="s">        :name &quot;My Organic Farm&quot; ;</span>
<span class="s">        :location &quot;Your Location&quot; ;</span>
<span class="s">        :certificationNumber &quot;ORG-2024-MY-FARM&quot; .</span>

<span class="s"># Your product batch</span>
<span class="s">:MyBatch001 a :ProductBatch ;</span>
<span class="s">            :product :OrganicCarrots ;</span>
<span class="s">            :batchId &quot;CARROT-2024-001&quot; ;</span>
<span class="s">            :harvestDate &quot;2024-01-20&quot;^^xsd:date ;</span>
<span class="s">            :originFarm :MyFarm ;</span>
<span class="s">            :batchSize &quot;200kg&quot;^^xsd:decimal ;</span>
<span class="s">            :certifiedOrganic true .</span>

<span class="s"># Processing activity</span>
<span class="s">:MyProcessing a :ProcessingActivity ;</span>
<span class="s">              :processedBatch :MyBatch001 ;</span>
<span class="s">              :processType :Washing ;</span>
<span class="s">              :timestamp &quot;2024-01-21T09:00:00Z&quot;^^xsd:dateTime ;</span>
<span class="s">              :performedBy :MyProcessingPlant .</span>

<span class="s"># Environmental monitoring</span>
<span class="s">:MyTransport :environmentalCondition [</span>
<span class="s">    a :EnvironmentalCondition ;</span>
<span class="s">    :temperature &quot;4.0°C&quot;^^xsd:decimal ;</span>
<span class="s">    :humidity &quot;80%&quot;^^xsd:decimal ;</span>
<span class="s">    :location :ColdStorage ;</span>
<span class="s">    :recordedAt &quot;2024-01-22T14:30:00Z&quot;^^xsd:dateTime</span>
<span class="s">] .</span>
<span class="s">EOF</span>
</pre></div>
</div>
</section>
<section id="add-data-to-blockchain">
<h3>Add Data to Blockchain</h3>
<div class="highlight-bash notranslate"><div class="highlight"><pre><span></span><span class="c1"># Add your data to the blockchain</span>
cargo<span class="w"> </span>run<span class="w"> </span>--<span class="w"> </span>add-file<span class="w"> </span>my_supply_chain.ttl

<span class="c1"># Verify the data was added</span>
cargo<span class="w"> </span>run<span class="w"> </span>--<span class="w"> </span>query<span class="w"> </span>my_query.sparql
</pre></div>
</div>
</section>
</section>
<section id="step-5-start-the-web-interface">
<h2>Step 5: Start the Web Interface</h2>
<section id="launch-the-web-server">
<h3>Launch the Web Server</h3>
<div class="highlight-bash notranslate"><div class="highlight"><pre><span></span><span class="c1"># Start the web interface</span>
cargo<span class="w"> </span>run<span class="w"> </span>--bin<span class="w"> </span>demo_ui
</pre></div>
</div>
<p>The web interface will start on <cite>http://localhost:8080</cite>.</p>
</section>
<section id="explore-the-web-interface">
<h3>Explore the Web Interface</h3>
<p>Open your browser and navigate to <cite>http://localhost:8080</cite>. You’ll see:</p>
<ol class="arabic simple">
<li><p><strong>Dashboard</strong>: Overview of blockchain status</p></li>
<li><p><strong>Query Interface</strong>: Interactive SPARQL query editor</p></li>
<li><p><strong>Block Explorer</strong>: Browse blockchain blocks</p></li>
<li><p><strong>Supply Chain Viewer</strong>: Visualize product journeys</p></li>
</ol>
</section>
<section id="try-interactive-queries">
<h3>Try Interactive Queries</h3>
<p>In the web interface:</p>
<ol class="arabic">
<li><p>Go to the “Query” tab</p></li>
<li><p>Enter a SPARQL query:</p>
<div class="highlight-sparql notranslate"><div class="highlight"><pre><span></span><span class="k">SELECT</span> <span class="nv">?batch</span> <span class="nv">?product</span> <span class="nv">?farm</span> <span class="k">WHERE</span> <span class="p">{</span>
  <span class="nv">?batch</span> <span class="k">a</span> <span class="p">:</span><span class="nt">ProductBatch</span> <span class="p">;</span>
         <span class="p">:</span><span class="nt">product</span> <span class="nv">?product</span> <span class="p">;</span>
         <span class="p">:</span><span class="nt">originFarm</span> <span class="nv">?farm</span> <span class="p">.</span>
<span class="p">}</span>
</pre></div>
</div>
</li>
<li><p>Click “Execute Query”</p></li>
<li><p>View the results in table format</p></li>
</ol>
</section>
</section>
<section id="step-6-advanced-features">
<h2>Step 6: Advanced Features</h2>
<section id="blockchain-validation">
<h3>Blockchain Validation</h3>
<p>Verify blockchain integrity:</p>
<div class="highlight-bash notranslate"><div class="highlight"><pre><span></span><span class="c1"># Validate the entire blockchain</span>
cargo<span class="w"> </span>run<span class="w"> </span>--<span class="w"> </span>validate

<span class="c1"># Check specific block</span>
cargo<span class="w"> </span>run<span class="w"> </span>--<span class="w"> </span>validate<span class="w"> </span>--block<span class="w"> </span><span class="m">1</span>
</pre></div>
</div>
</section>
<section id="export-data">
<h3>Export Data</h3>
<p>Export blockchain data in different formats:</p>
<div class="highlight-bash notranslate"><div class="highlight"><pre><span></span><span class="c1"># Export as Turtle (RDF)</span>
cargo<span class="w"> </span>run<span class="w"> </span>--<span class="w"> </span><span class="nb">export</span><span class="w"> </span>--format<span class="w"> </span>turtle<span class="w"> </span>--output<span class="w"> </span>my_blockchain.ttl

<span class="c1"># Export as JSON-LD</span>
cargo<span class="w"> </span>run<span class="w"> </span>--<span class="w"> </span><span class="nb">export</span><span class="w"> </span>--format<span class="w"> </span>jsonld<span class="w"> </span>--output<span class="w"> </span>my_blockchain.jsonld
</pre></div>
</div>
</section>
<section id="network-operations">
<h3>Network Operations</h3>
<p>Connect to other ProvChainOrg nodes:</p>
<div class="highlight-bash notranslate"><div class="highlight"><pre><span></span><span class="c1"># Start as network node</span>
cargo<span class="w"> </span>run<span class="w"> </span>--<span class="w"> </span>network<span class="w"> </span>--port<span class="w"> </span><span class="m">8081</span>

<span class="c1"># Connect to another node</span>
cargo<span class="w"> </span>run<span class="w"> </span>--<span class="w"> </span>network<span class="w"> </span>--connect<span class="w"> </span>ws://localhost:8081
</pre></div>
</div>
</section>
</section>
<section id="step-7-understanding-the-results">
<h2>Step 7: Understanding the Results</h2>
<section id="data-structure">
<h3>Data Structure</h3>
<p>Your supply chain data is stored as RDF triples in blockchain blocks:</p>
<div class="highlight-turtle notranslate"><div class="highlight"><pre><span></span><span class="c"># Each block contains a named graph</span>
<span class="p">:</span><span class="nt">Block1</span> <span class="p">{</span>
  <span class="p">:</span><span class="nt">MyBatch001</span> <span class="kt">a</span> <span class="p">:</span><span class="nt">ProductBatch</span> <span class="p">;</span>
              <span class="p">:</span><span class="nt">product</span> <span class="p">:</span><span class="nt">OrganicCarrots</span> <span class="p">;</span>
              <span class="p">:</span><span class="nt">originFarm</span> <span class="p">:</span><span class="nt">MyFarm</span> <span class="p">.</span>

  <span class="p">:</span><span class="nt">MyFarm</span> <span class="kt">a</span> <span class="p">:</span><span class="nt">OrganicFarm</span> <span class="p">;</span>
          <span class="p">:</span><span class="nt">location</span> <span class="s">&quot;Your Location&quot;</span> <span class="p">.</span>
<span class="p">}</span>
</pre></div>
</div>
</section>
<section id="traceability-queries">
<h3>Traceability Queries</h3>
<p>You can now trace:</p>
<ul class="simple">
<li><p><strong>Forward</strong>: Where did this batch go?</p></li>
<li><p><strong>Backward</strong>: Where did this product come from?</p></li>
<li><p><strong>Environmental</strong>: What conditions was it stored under?</p></li>
<li><p><strong>Quality</strong>: What certifications does it have?</p></li>
</ul>
</section>
<section id="blockchain-benefits">
<h3>Blockchain Benefits</h3>
<p>Your data now has:</p>
<ul class="simple">
<li><p>✅ <strong>Immutability</strong>: Cannot be changed once recorded</p></li>
<li><p>✅ <strong>Transparency</strong>: All data is queryable</p></li>
<li><p>✅ <strong>Verification</strong>: Cryptographically secured</p></li>
<li><p>✅ <strong>Interoperability</strong>: Standard RDF/SPARQL formats</p></li>
</ul>
</section>
</section>
<section id="next-steps">
<h2>Next Steps</h2>
<p>Congratulations! You’ve built your first supply chain application with ProvChainOrg. Here’s what to explore next:</p>
<p><strong>Learn More Concepts</strong>
- <a class="reference internal" href="../foundational/intro-to-rdf-blockchain.xhtml"><span class="doc">Introduction to RDF Blockchain</span></a> - Understand the technology
- <span class="xref std std-doc">../foundational/sparql-queries</span> - Master SPARQL querying
- <span class="xref std std-doc">../foundational/ontologies-and-validation</span> - Learn about data validation</p>
<p><strong>Build Advanced Applications</strong>
- <span class="xref std std-doc">food-traceability</span> - Complete food safety system
- <span class="xref std std-doc">pharmaceutical-tracking</span> - Drug authentication
- <span class="xref std std-doc">api-integration</span> - Integrate with existing systems</p>
<p><strong>Development Resources</strong>
- <span class="xref std std-doc">../stack/client-apis</span> - REST and SPARQL APIs
- <span class="xref std std-doc">../stack/development-frameworks</span> - Development tools
- <a class="reference internal" href="../api/rest-api.xhtml"><span class="doc">REST API Reference</span></a> - Complete API reference</p>
</section>
<section id="troubleshooting">
<h2>Troubleshooting</h2>
<section id="common-issues">
<h3>Common Issues</h3>
<dl class="simple">
<dt><strong>Build Errors</strong></dt><dd><p>Ensure you have Rust 1.70+ installed: <cite>rustup update</cite></p>
</dd>
<dt><strong>Query Errors</strong></dt><dd><p>Check SPARQL syntax and ensure prefixes are defined</p>
</dd>
<dt><strong>Network Issues</strong></dt><dd><p>Verify ports are available and firewall settings</p>
</dd>
<dt><strong>Data Validation Errors</strong></dt><dd><p>Ensure RDF data follows the ontology schema</p>
</dd>
</dl>
</section>
<section id="getting-help">
<h3>Getting Help</h3>
<ul class="simple">
<li><p><strong>GitHub Issues</strong>: Report bugs and ask questions</p></li>
<li><p><strong>Documentation</strong>: Comprehensive guides and API reference</p></li>
<li><p><strong>Community</strong>: Join discussions and share experiences</p></li>
</ul>
<div class="admonition note">
<p class="admonition-title">Note</p>
<p>This tutorial covered the basics of ProvChainOrg. The platform supports much more advanced features including distributed networks, complex ontologies, and enterprise integrations.</p>
</div>
</section>
</section>
<section id="summary">
<h2>Summary</h2>
<p>In this tutorial, you:</p>
<ol class="arabic simple">
<li><p>✅ Installed and configured ProvChainOrg</p></li>
<li><p>✅ Ran the demo and explored sample data</p></li>
<li><p>✅ Created and executed SPARQL queries</p></li>
<li><p>✅ Added your own supply chain data</p></li>
<li><p>✅ Used the web interface for visualization</p></li>
<li><p>✅ Learned about blockchain validation and export</p></li>
</ol>
<p>You now have a working semantic blockchain for supply chain traceability that provides transparency, verifiability, and queryability that traditional systems cannot match.</p>
<p>The combination of blockchain security with semantic web technologies opens up new possibilities for supply chain transparency, regulatory compliance, and consumer trust.</p>
</section>
</section>


            <div class="clearer"></div>
          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>