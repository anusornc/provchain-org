<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" /><meta name="viewport" content="width=device-width, initial-scale=1" />

    <title>Authentication</title>
    <link rel="stylesheet" type="text/css" href="../_static/pygments.css?v=8e8a900e" />
    <link rel="stylesheet" type="text/css" href="../_static/epub.css?v=1d6d279e" />
    <link rel="stylesheet" type="text/css" href="../_static/copybutton.css?v=76b2166b" />
    <link rel="stylesheet" type="text/css" href="../_static/custom.css?v=3afbad45" />
    <link rel="stylesheet" type="text/css" href="../_static/interactive.css?v=267755d7" /> 
  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <section id="authentication">
<h1>Authentication</h1>
<p>Secure access to ProvChainOrg APIs through multiple authentication methods designed for different use cases and security requirements.</p>
<div class="hero-section">
  <div class="hero-content">
    <h1>API Authentication</h1>
    <p class="hero-subtitle">Secure access to ProvChainOrg APIs with multiple authentication methods</p>
    <div class="hero-badges">
      <span class="badge badge-api">API</span>
      <span class="badge badge-security">Security</span>
      <span class="badge badge-authentication">Authentication</span>
      <span class="badge badge-integration">Integration</span>
    </div>
  </div>
</div><section id="overview">
<h2>Overview</h2>
<p>ProvChainOrg provides multiple authentication methods to secure API access while maintaining flexibility for different integration scenarios:</p>
<p><strong>Authentication Methods:</strong>
- <strong>API Keys</strong>: Simple token-based authentication for applications
- <strong>JWT Tokens</strong>: Session-based authentication for users
- <strong>OAuth 2.0</strong>: Third-party application integration
- <strong>Certificate Authentication</strong>: Mutual TLS for high-security environments
- <strong>HMAC Signatures</strong>: Message authentication for API requests</p>
<p><strong>Security Features:</strong>
- <strong>Role-Based Access Control</strong>: Fine-grained permissions by user role
- <strong>Rate Limiting</strong>: Prevent abuse through request limiting
- <strong>Audit Logging</strong>: Comprehensive logging of all API access
- <strong>Encryption</strong>: TLS 1.3 for all communications</p>
</section>
<section id="authentication-methods">
<h2>Authentication Methods</h2>
<section id="api-keys">
<h3>API Keys</h3>
<p>API keys are the simplest authentication method, suitable for server-to-server communication and applications that don’t require user context.</p>
<p><strong>Generating API Keys</strong>
.. code-block:: bash</p>
<blockquote>
<div><p># Generate a new API key via CLI
cargo run – generate-api-key –name “My Application” –permissions “read,write”</p>
<p># Generate via REST API (requires admin privileges)
curl -X POST <a class="reference external" href="https://api.provchain-org.com/v1/api-keys">https://api.provchain-org.com/v1/api-keys</a> </p>
<blockquote>
<div><p>-H “Authorization: Bearer ADMIN_JWT_TOKEN” -H “Content-Type: application/json” -d ‘{</p>
<blockquote>
<div><p>“name”: “My Application”,
“permissions”: [“read”, “write”],
“expires_in”: 86400</p>
</div></blockquote>
<p>}’</p>
</div></blockquote>
</div></blockquote>
<p><strong>Using API Keys</strong>
.. code-block:: http</p>
<blockquote>
<div><p>GET /api/v1/status
Authorization: Bearer pk_1234567890abcdef1234567890abcdef</p>
</div></blockquote>
</section>
<section id="jwt-tokens">
<h3>JWT Tokens</h3>
<p>JWT (JSON Web Token) authentication is used for user-based access where individual user context is important.</p>
<p><strong>Obtaining JWT Tokens</strong>
.. code-block:: http</p>
<blockquote>
<div><p>POST /auth/login
Content-Type: application/json</p>
<dl class="simple">
<dt>{</dt><dd><p>“username”: “<a class="reference external" href="mailto:user&#37;&#52;&#48;example&#46;com">user<span>&#64;</span>example<span>&#46;</span>com</a>”,
“password”: “secure-password”</p>
</dd>
</dl>
<p>}</p>
</div></blockquote>
<p><strong>Response:</strong>
.. code-block:: json</p>
<blockquote>
<div><dl class="simple">
<dt>{</dt><dd><p>“access_token”: “eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9…”,
“token_type”: “Bearer”,
“expires_in”: 3600,
“refresh_token”: “refresh_1234567890abcdef”</p>
</dd>
</dl>
<p>}</p>
</div></blockquote>
<p><strong>Using JWT Tokens</strong>
.. code-block:: http</p>
<blockquote>
<div><p>GET /api/v1/user/profile
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9…</p>
</div></blockquote>
</section>
<section id="oauth-2-0">
<h3>OAuth 2.0</h3>
<p>OAuth 2.0 enables third-party applications to access ProvChainOrg APIs on behalf of users without exposing credentials.</p>
<p><strong>Authorization Code Flow</strong>
.. code-block:: http</p>
<blockquote>
<div><p># Redirect user to authorization endpoint
GET /oauth/authorize?</p>
<blockquote>
<div><p>response_type=code&amp;
client_id=CLIENT_ID&amp;
redirect_uri=https://your-app.com/callback&amp;
scope=read write&amp;
state=xyz</p>
</div></blockquote>
</div></blockquote>
<p><strong>Token Exchange</strong>
.. code-block:: http</p>
<blockquote>
<div><p>POST /oauth/token
Content-Type: application/x-www-form-urlencoded
Authorization: Basic BASE64_ENCODED_CLIENT_CREDENTIALS</p>
<p>grant_type=authorization_code&amp;
code=AUTHORIZATION_CODE&amp;
redirect_uri=https://your-app.com/callback</p>
</div></blockquote>
</section>
<section id="certificate-authentication">
<h3>Certificate Authentication</h3>
<p>Certificate-based authentication provides the highest level of security through mutual TLS authentication.</p>
<p><strong>Client Certificate Setup</strong>
.. code-block:: bash</p>
<blockquote>
<div><p># Generate client certificate
openssl req -new -newkey rsa:2048 -nodes -keyout client.key -out client.csr</p>
<p># Submit CSR to ProvChainOrg for signing
curl -X POST <a class="reference external" href="https://api.provchain-org.com/v1/certificates">https://api.provchain-org.com/v1/certificates</a> </p>
<blockquote>
<div><p>-H “Authorization: Bearer ADMIN_API_KEY” -F “<a class="reference external" href="mailto:csr=&#37;&#52;&#48;client&#46;csr">csr=<span>&#64;</span>client<span>&#46;</span>csr</a>” -F “name=My Application”</p>
</div></blockquote>
</div></blockquote>
<p><strong>Using Client Certificates</strong>
.. code-block:: bash</p>
<blockquote>
<div><p># Use certificate with curl
curl –cert client.crt –key client.key </p>
<blockquote>
<div><p><a class="reference external" href="https://api.provchain-org.com/api/v1/status">https://api.provchain-org.com/api/v1/status</a></p>
</div></blockquote>
</div></blockquote>
</section>
<section id="hmac-signatures">
<h3>HMAC Signatures</h3>
<p>HMAC signatures provide message authentication for API requests, ensuring both authenticity and integrity.</p>
<p><strong>HMAC Signature Generation</strong>
.. code-block:: python</p>
<blockquote>
<div><p>import hmac
import hashlib
import base64
import time</p>
<dl>
<dt>def generate_hmac_signature(api_key, secret_key, method, url, body=’’):</dt><dd><p># Create signature string
timestamp = str(int(time.time()))
signature_string = f”{method}n{url}n{body}n{timestamp}”</p>
<p># Generate HMAC signature
signature = hmac.new(</p>
<blockquote>
<div><p>secret_key.encode(),
signature_string.encode(),
hashlib.sha256</p>
</div></blockquote>
<p>).digest()</p>
<p>signature_b64 = base64.b64encode(signature).decode()</p>
<p>return signature_b64, timestamp</p>
</dd>
</dl>
</div></blockquote>
<p><strong>Using HMAC Signatures</strong>
.. code-block:: http</p>
<blockquote>
<div><p>POST /api/v1/data
Content-Type: text/turtle
X-API-Key: pk_1234567890abcdef
X-Timestamp: 1640995200
X-Signature: Base64EncodedHMACSignature</p>
</div></blockquote>
</section>
</section>
<section id="role-based-access-control">
<h2>Role-Based Access Control</h2>
<p>ProvChainOrg implements fine-grained access control through roles and permissions.</p>
<p><strong>User Roles</strong>
.. list-table:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="p">:</span><span class="n">header</span><span class="o">-</span><span class="n">rows</span><span class="p">:</span> <span class="mi">1</span>
<span class="p">:</span><span class="n">widths</span><span class="p">:</span> <span class="mi">20</span> <span class="mi">40</span> <span class="mi">40</span>

<span class="o">*</span> <span class="o">-</span> <span class="n">Role</span>
  <span class="o">-</span> <span class="n">Description</span>
  <span class="o">-</span> <span class="n">Permissions</span>
<span class="o">*</span> <span class="o">-</span> <span class="o">**</span><span class="n">Viewer</span><span class="o">**</span>
  <span class="o">-</span> <span class="n">Read</span><span class="o">-</span><span class="n">only</span> <span class="n">access</span> <span class="n">to</span> <span class="n">public</span> <span class="n">data</span>
  <span class="o">-</span> <span class="n">read_public_data</span>
<span class="o">*</span> <span class="o">-</span> <span class="o">**</span><span class="n">User</span><span class="o">**</span>
  <span class="o">-</span> <span class="n">Standard</span> <span class="n">user</span> <span class="k">with</span> <span class="n">read</span><span class="o">/</span><span class="n">write</span> <span class="n">access</span> <span class="n">to</span> <span class="n">their</span> <span class="n">data</span>
  <span class="o">-</span> <span class="n">read_data</span><span class="p">,</span> <span class="n">write_data</span><span class="p">,</span> <span class="n">query_data</span>
<span class="o">*</span> <span class="o">-</span> <span class="o">**</span><span class="n">Manager</span><span class="o">**</span>
  <span class="o">-</span> <span class="n">Business</span> <span class="n">user</span> <span class="k">with</span> <span class="n">extended</span> <span class="n">permissions</span>
  <span class="o">-</span> <span class="n">user_permissions</span> <span class="o">+</span> <span class="n">manage_batches</span><span class="p">,</span> <span class="n">generate_reports</span>
<span class="o">*</span> <span class="o">-</span> <span class="o">**</span><span class="n">Administrator</span><span class="o">**</span>
  <span class="o">-</span> <span class="n">System</span> <span class="n">administrator</span> <span class="k">with</span> <span class="n">full</span> <span class="n">access</span>
  <span class="o">-</span> <span class="n">all_permissions</span> <span class="o">+</span> <span class="n">user_management</span><span class="p">,</span> <span class="n">system_config</span>
<span class="o">*</span> <span class="o">-</span> <span class="o">**</span><span class="n">Auditor</span><span class="o">**</span>
  <span class="o">-</span> <span class="n">Compliance</span> <span class="n">auditor</span> <span class="k">with</span> <span class="n">read</span><span class="o">-</span><span class="n">only</span> <span class="n">access</span>
  <span class="o">-</span> <span class="n">read_all_data</span><span class="p">,</span> <span class="n">audit_logs</span><span class="p">,</span> <span class="n">compliance_reports</span>
</pre></div>
</div>
<p><strong>Resource-Level Permissions</strong>
Permissions can be granted at the resource level for fine-grained control:</p>
<div class="highlight-json notranslate"><div class="highlight"><pre><span></span><span class="p">{</span>
<span class="w">  </span><span class="nt">&quot;user_id&quot;</span><span class="p">:</span><span class="w"> </span><span class="s2">&quot;user_123&quot;</span><span class="p">,</span>
<span class="w">  </span><span class="nt">&quot;permissions&quot;</span><span class="p">:</span><span class="w"> </span><span class="p">{</span>
<span class="w">    </span><span class="nt">&quot;organization:acme&quot;</span><span class="p">:</span><span class="w"> </span><span class="p">{</span>
<span class="w">      </span><span class="nt">&quot;read&quot;</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="p">,</span>
<span class="w">      </span><span class="nt">&quot;write&quot;</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="p">,</span>
<span class="w">      </span><span class="nt">&quot;delete&quot;</span><span class="p">:</span><span class="w"> </span><span class="kc">false</span>
<span class="w">    </span><span class="p">},</span>
<span class="w">    </span><span class="nt">&quot;organization:competitor&quot;</span><span class="p">:</span><span class="w"> </span><span class="p">{</span>
<span class="w">      </span><span class="nt">&quot;read&quot;</span><span class="p">:</span><span class="w"> </span><span class="kc">false</span><span class="p">,</span>
<span class="w">      </span><span class="nt">&quot;write&quot;</span><span class="p">:</span><span class="w"> </span><span class="kc">false</span><span class="p">,</span>
<span class="w">      </span><span class="nt">&quot;delete&quot;</span><span class="p">:</span><span class="w"> </span><span class="kc">false</span>
<span class="w">    </span><span class="p">}</span>
<span class="w">  </span><span class="p">}</span>
<span class="p">}</span>
</pre></div>
</div>
</section>
<section id="rate-limiting">
<h2>Rate Limiting</h2>
<p>API endpoints are rate limited to prevent abuse and ensure fair usage.</p>
<p><strong>Rate Limits by Authentication Method</strong>
.. list-table:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="p">:</span><span class="n">header</span><span class="o">-</span><span class="n">rows</span><span class="p">:</span> <span class="mi">1</span>
<span class="p">:</span><span class="n">widths</span><span class="p">:</span> <span class="mi">25</span> <span class="mi">25</span> <span class="mi">25</span> <span class="mi">25</span>

<span class="o">*</span> <span class="o">-</span> <span class="n">Authentication</span> <span class="n">Method</span>
  <span class="o">-</span> <span class="n">Read</span> <span class="n">Operations</span>
  <span class="o">-</span> <span class="n">Write</span> <span class="n">Operations</span>
  <span class="o">-</span> <span class="n">Special</span> <span class="n">Operations</span>
<span class="o">*</span> <span class="o">-</span> <span class="o">**</span><span class="n">API</span> <span class="n">Key</span><span class="o">**</span>
  <span class="o">-</span> <span class="mi">1000</span> <span class="n">requests</span><span class="o">/</span><span class="n">minute</span>
  <span class="o">-</span> <span class="mi">100</span> <span class="n">requests</span><span class="o">/</span><span class="n">minute</span>
  <span class="o">-</span> <span class="mi">10</span> <span class="n">requests</span><span class="o">/</span><span class="n">minute</span>
<span class="o">*</span> <span class="o">-</span> <span class="o">**</span><span class="n">JWT</span> <span class="n">Token</span><span class="o">**</span>
  <span class="o">-</span> <span class="mi">500</span> <span class="n">requests</span><span class="o">/</span><span class="n">minute</span>
  <span class="o">-</span> <span class="mi">50</span> <span class="n">requests</span><span class="o">/</span><span class="n">minute</span>
  <span class="o">-</span> <span class="mi">5</span> <span class="n">requests</span><span class="o">/</span><span class="n">minute</span>
<span class="o">*</span> <span class="o">-</span> <span class="o">**</span><span class="n">OAuth</span> <span class="mf">2.0</span><span class="o">**</span>
  <span class="o">-</span> <span class="mi">200</span> <span class="n">requests</span><span class="o">/</span><span class="n">minute</span>
  <span class="o">-</span> <span class="mi">20</span> <span class="n">requests</span><span class="o">/</span><span class="n">minute</span>
  <span class="o">-</span> <span class="mi">2</span> <span class="n">requests</span><span class="o">/</span><span class="n">minute</span>
<span class="o">*</span> <span class="o">-</span> <span class="o">**</span><span class="n">Certificate</span> <span class="n">Auth</span><span class="o">**</span>
  <span class="o">-</span> <span class="n">Unlimited</span> <span class="p">(</span><span class="k">with</span> <span class="n">monitoring</span><span class="p">)</span>
  <span class="o">-</span> <span class="mi">1000</span> <span class="n">requests</span><span class="o">/</span><span class="n">minute</span>
  <span class="o">-</span> <span class="mi">100</span> <span class="n">requests</span><span class="o">/</span><span class="n">minute</span>
</pre></div>
</div>
<p><strong>Rate Limit Headers</strong>
All API responses include rate limit information:</p>
<div class="highlight-http notranslate"><div class="highlight"><pre><span></span><span class="kr">HTTP</span><span class="o">/</span><span class="m">1.1</span> <span class="m">200</span> <span class="ne">OK</span>
<span class="na">X-RateLimit-Limit</span><span class="o">:</span> <span class="l">1000</span>
<span class="na">X-RateLimit-Remaining</span><span class="o">:</span> <span class="l">999</span>
<span class="na">X-RateLimit-Reset</span><span class="o">:</span> <span class="l">1640995260</span>
<span class="na">X-RateLimit-Policy</span><span class="o">:</span> <span class="l">api_key_read</span>
</pre></div>
</div>
<p><strong>Handling Rate Limits</strong>
When a rate limit is exceeded, the API returns a 429 status:</p>
<div class="highlight-http notranslate"><div class="highlight"><pre><span></span><span class="kr">HTTP</span><span class="o">/</span><span class="m">1.1</span> <span class="m">429</span> <span class="ne">Too Many Requests</span>
<span class="na">X-RateLimit-Limit</span><span class="o">:</span> <span class="l">1000</span>
<span class="na">X-RateLimit-Remaining</span><span class="o">:</span> <span class="l">0</span>
<span class="na">X-RateLimit-Reset</span><span class="o">:</span> <span class="l">1640995260</span>
<span class="na">Retry-After</span><span class="o">:</span> <span class="l">60</span>

{
  &quot;error&quot;: {
    &quot;code&quot;: &quot;RATE_LIMIT_EXCEEDED&quot;,
    &quot;message&quot;: &quot;Rate limit exceeded. Try again in 60 seconds.&quot;
  }
}
</pre></div>
</div>
</section>
<section id="security-best-practices">
<h2>Security Best Practices</h2>
<section id="api-key-security">
<h3>API Key Security</h3>
<ol class="arabic simple">
<li><p><strong>Storage</strong>: Store API keys securely, never in source code</p></li>
<li><p><strong>Rotation</strong>: Regularly rotate API keys</p></li>
<li><p><strong>Scope</strong>: Use least privilege principle</p></li>
<li><p><strong>Monitoring</strong>: Monitor API key usage for anomalies</p></li>
</ol>
</section>
<section id="jwt-security">
<h3>JWT Security</h3>
<ol class="arabic simple">
<li><p><strong>Storage</strong>: Store JWT tokens securely (HttpOnly cookies)</p></li>
<li><p><strong>Expiration</strong>: Use short-lived access tokens with refresh tokens</p></li>
<li><p><strong>Validation</strong>: Always validate JWT signatures and claims</p></li>
<li><p><strong>Revocation</strong>: Implement token revocation for compromised tokens</p></li>
</ol>
</section>
<section id="certificate-security">
<h3>Certificate Security</h3>
<ol class="arabic simple">
<li><p><strong>Storage</strong>: Store private keys securely with proper permissions</p></li>
<li><p><strong>Rotation</strong>: Regularly rotate certificates before expiration</p></li>
<li><p><strong>Revocation</strong>: Implement certificate revocation checking</p></li>
<li><p><strong>Validation</strong>: Validate certificate chains properly</p></li>
</ol>
</section>
<section id="hmac-security">
<h3>HMAC Security</h3>
<ol class="arabic simple">
<li><p><strong>Secret Storage</strong>: Store HMAC secrets securely</p></li>
<li><p><strong>Timestamp Validation</strong>: Validate request timestamps to prevent replay attacks</p></li>
<li><p><strong>Signature Verification</strong>: Always verify signatures before processing requests</p></li>
<li><p><strong>Nonce Usage</strong>: Use nonces to prevent replay attacks for critical operations</p></li>
</ol>
</section>
</section>
<section id="audit-logging">
<h2>Audit Logging</h2>
<p>All API access is logged for security monitoring and compliance.</p>
<p><strong>Log Information</strong>
.. code-block:: json</p>
<blockquote>
<div><dl class="simple">
<dt>{</dt><dd><p>“timestamp”: “2025-01-15T10:30:00Z”,
“request_id”: “req_1234567890abcdef”,
“user_id”: “user_123”,
“ip_address”: “192.168.1.100”,
“user_agent”: “Mozilla/5.0 (compatible; MyApp/1.0)”,
“method”: “POST”,
“path”: “/api/v1/data”,
“status_code”: 201,
“response_time_ms”: 45,
“authentication_method”: “api_key”,
“rate_limit_remaining”: 99</p>
</dd>
</dl>
<p>}</p>
</div></blockquote>
<p><strong>Compliance Features</strong>
- <strong>Immutable Logs</strong>: Logs cannot be modified or deleted
- <strong>Chain of Custody</strong>: Complete audit trail for compliance
- <strong>Export Options</strong>: Export logs for external analysis
- <strong>Retention Policies</strong>: Configurable log retention periods</p>
</section>
<section id="troubleshooting">
<h2>Troubleshooting</h2>
<section id="common-authentication-issues">
<h3>Common Authentication Issues</h3>
<p><strong>Invalid API Key</strong>
- <strong>Error</strong>: 401 Unauthorized with “Invalid API key”
- <strong>Solution</strong>: Verify API key format and validity</p>
<p><strong>Expired JWT Token</strong>
- <strong>Error</strong>: 401 Unauthorized with “Token expired”
- <strong>Solution</strong>: Refresh token or re-authenticate</p>
<p><strong>Certificate Validation Failed</strong>
- <strong>Error</strong>: SSL/TLS handshake failure
- <strong>Solution</strong>: Verify certificate validity and chain</p>
<p><strong>HMAC Signature Mismatch</strong>
- <strong>Error</strong>: 401 Unauthorized with “Invalid signature”
- <strong>Solution</strong>: Verify signature generation algorithm and timestamp</p>
<p><strong>Rate Limit Exceeded</strong>
- <strong>Error</strong>: 429 Too Many Requests
- <strong>Solution</strong>: Wait for rate limit reset or implement exponential backoff</p>
</section>
<section id="debugging-authentication">
<h3>Debugging Authentication</h3>
<p><strong>Enable Debug Logging</strong>
.. code-block:: bash</p>
<blockquote>
<div><p># Enable authentication debug logging
export RUST_LOG=provchain_auth=debug
cargo run</p>
</div></blockquote>
<p><strong>Check Authentication Headers</strong>
.. code-block:: bash</p>
<blockquote>
<div><p># Debug authentication with curl
curl -v -H “Authorization: Bearer YOUR_TOKEN” </p>
<blockquote>
<div><p><a class="reference external" href="https://api.provchain-org.com/api/v1/status">https://api.provchain-org.com/api/v1/status</a></p>
</div></blockquote>
</div></blockquote>
<p><strong>Validate JWT Tokens</strong>
.. code-block:: bash</p>
<blockquote>
<div><p># Decode JWT token (without verification)
echo “YOUR_JWT_TOKEN” | cut -d. -f1 | base64 -d
echo “YOUR_JWT_TOKEN” | cut -d. -f2 | base64 -d</p>
</div></blockquote>
</section>
</section>
<section id="best-practices">
<h2>Best Practices</h2>
<ol class="arabic simple">
<li><p><strong>Use Appropriate Authentication</strong>: Choose the right method for your use case</p></li>
<li><p><strong>Implement Proper Error Handling</strong>: Handle authentication failures gracefully</p></li>
<li><p><strong>Monitor API Usage</strong>: Track usage patterns and anomalies</p></li>
<li><p><strong>Regular Security Audits</strong>: Periodically review authentication configurations</p></li>
<li><p><strong>Keep Credentials Secure</strong>: Never expose credentials in client-side code</p></li>
<li><p><strong>Use HTTPS</strong>: Always use encrypted connections</p></li>
<li><p><strong>Implement Rate Limiting</strong>: Protect against abuse in your applications</p></li>
<li><p><strong>Log Security Events</strong>: Maintain audit trails for security incidents</p></li>
</ol>
</section>
<section id="example-implementations">
<h2>Example Implementations</h2>
<section id="python-implementation">
<h3>Python Implementation</h3>
<div class="highlight-python notranslate"><div class="highlight"><pre><span></span><span class="kn">import</span><span class="w"> </span><span class="nn">requests</span>
<span class="kn">import</span><span class="w"> </span><span class="nn">os</span>
<span class="kn">import</span><span class="w"> </span><span class="nn">time</span>
<span class="kn">import</span><span class="w"> </span><span class="nn">hmac</span>
<span class="kn">import</span><span class="w"> </span><span class="nn">hashlib</span>
<span class="kn">import</span><span class="w"> </span><span class="nn">base64</span>

<span class="k">class</span><span class="w"> </span><span class="nc">ProvChainAuth</span><span class="p">:</span>
    <span class="k">def</span><span class="w"> </span><span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">base_url</span><span class="p">,</span> <span class="n">api_key</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span> <span class="n">secret_key</span><span class="o">=</span><span class="kc">None</span><span class="p">):</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">base_url</span> <span class="o">=</span> <span class="n">base_url</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">api_key</span> <span class="o">=</span> <span class="n">api_key</span> <span class="ow">or</span> <span class="n">os</span><span class="o">.</span><span class="n">getenv</span><span class="p">(</span><span class="s1">&#39;PROVCHAIN_API_KEY&#39;</span><span class="p">)</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">secret_key</span> <span class="o">=</span> <span class="n">secret_key</span> <span class="ow">or</span> <span class="n">os</span><span class="o">.</span><span class="n">getenv</span><span class="p">(</span><span class="s1">&#39;PROVCHAIN_SECRET_KEY&#39;</span><span class="p">)</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">session</span> <span class="o">=</span> <span class="n">requests</span><span class="o">.</span><span class="n">Session</span><span class="p">()</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">session</span><span class="o">.</span><span class="n">headers</span><span class="o">.</span><span class="n">update</span><span class="p">({</span>
            <span class="s1">&#39;Authorization&#39;</span><span class="p">:</span> <span class="sa">f</span><span class="s1">&#39;Bearer </span><span class="si">{</span><span class="bp">self</span><span class="o">.</span><span class="n">api_key</span><span class="si">}</span><span class="s1">&#39;</span>
        <span class="p">})</span>

    <span class="k">def</span><span class="w"> </span><span class="nf">make_request</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">method</span><span class="p">,</span> <span class="n">endpoint</span><span class="p">,</span> <span class="n">data</span><span class="o">=</span><span class="kc">None</span><span class="p">):</span>
        <span class="n">url</span> <span class="o">=</span> <span class="sa">f</span><span class="s2">&quot;</span><span class="si">{</span><span class="bp">self</span><span class="o">.</span><span class="n">base_url</span><span class="si">}{</span><span class="n">endpoint</span><span class="si">}</span><span class="s2">&quot;</span>

        <span class="c1"># Add HMAC signature for write operations</span>
        <span class="k">if</span> <span class="n">method</span> <span class="ow">in</span> <span class="p">[</span><span class="s1">&#39;POST&#39;</span><span class="p">,</span> <span class="s1">&#39;PUT&#39;</span><span class="p">,</span> <span class="s1">&#39;DELETE&#39;</span><span class="p">]</span> <span class="ow">and</span> <span class="bp">self</span><span class="o">.</span><span class="n">secret_key</span><span class="p">:</span>
            <span class="n">signature</span><span class="p">,</span> <span class="n">timestamp</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_generate_hmac_signature</span><span class="p">(</span>
                <span class="n">method</span><span class="p">,</span> <span class="n">endpoint</span><span class="p">,</span> <span class="n">data</span> <span class="ow">or</span> <span class="s1">&#39;&#39;</span>
            <span class="p">)</span>
            <span class="bp">self</span><span class="o">.</span><span class="n">session</span><span class="o">.</span><span class="n">headers</span><span class="o">.</span><span class="n">update</span><span class="p">({</span>
                <span class="s1">&#39;X-Timestamp&#39;</span><span class="p">:</span> <span class="n">timestamp</span><span class="p">,</span>
                <span class="s1">&#39;X-Signature&#39;</span><span class="p">:</span> <span class="n">signature</span>
            <span class="p">})</span>

        <span class="n">response</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">session</span><span class="o">.</span><span class="n">request</span><span class="p">(</span><span class="n">method</span><span class="p">,</span> <span class="n">url</span><span class="p">,</span> <span class="n">json</span><span class="o">=</span><span class="n">data</span><span class="p">)</span>
        <span class="n">response</span><span class="o">.</span><span class="n">raise_for_status</span><span class="p">()</span>
        <span class="k">return</span> <span class="n">response</span><span class="o">.</span><span class="n">json</span><span class="p">()</span>

    <span class="k">def</span><span class="w"> </span><span class="nf">_generate_hmac_signature</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">method</span><span class="p">,</span> <span class="n">endpoint</span><span class="p">,</span> <span class="n">body</span><span class="o">=</span><span class="s1">&#39;&#39;</span><span class="p">):</span>
        <span class="n">timestamp</span> <span class="o">=</span> <span class="nb">str</span><span class="p">(</span><span class="nb">int</span><span class="p">(</span><span class="n">time</span><span class="o">.</span><span class="n">time</span><span class="p">()))</span>
        <span class="n">signature_string</span> <span class="o">=</span> <span class="sa">f</span><span class="s2">&quot;</span><span class="si">{</span><span class="n">method</span><span class="si">}</span><span class="se">\n</span><span class="si">{</span><span class="n">endpoint</span><span class="si">}</span><span class="se">\n</span><span class="si">{</span><span class="n">body</span><span class="si">}</span><span class="se">\n</span><span class="si">{</span><span class="n">timestamp</span><span class="si">}</span><span class="s2">&quot;</span>

        <span class="n">signature</span> <span class="o">=</span> <span class="n">hmac</span><span class="o">.</span><span class="n">new</span><span class="p">(</span>
            <span class="bp">self</span><span class="o">.</span><span class="n">secret_key</span><span class="o">.</span><span class="n">encode</span><span class="p">(),</span>
            <span class="n">signature_string</span><span class="o">.</span><span class="n">encode</span><span class="p">(),</span>
            <span class="n">hashlib</span><span class="o">.</span><span class="n">sha256</span>
        <span class="p">)</span><span class="o">.</span><span class="n">digest</span><span class="p">()</span>

        <span class="k">return</span> <span class="n">base64</span><span class="o">.</span><span class="n">b64encode</span><span class="p">(</span><span class="n">signature</span><span class="p">)</span><span class="o">.</span><span class="n">decode</span><span class="p">(),</span> <span class="n">timestamp</span>
</pre></div>
</div>
</section>
<section id="javascript-implementation">
<h3>JavaScript Implementation</h3>
<div class="highlight-javascript notranslate"><div class="highlight"><pre><span></span><span class="kd">class</span><span class="w"> </span><span class="nx">ProvChainAuth</span><span class="w"> </span><span class="p">{</span>
<span class="w">    </span><span class="kr">constructor</span><span class="p">(</span><span class="nx">baseUrl</span><span class="p">,</span><span class="w"> </span><span class="nx">apiKey</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">null</span><span class="p">,</span><span class="w"> </span><span class="nx">secretKey</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">null</span><span class="p">)</span><span class="w"> </span><span class="p">{</span>
<span class="w">        </span><span class="k">this</span><span class="p">.</span><span class="nx">baseUrl</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nx">baseUrl</span><span class="p">;</span>
<span class="w">        </span><span class="k">this</span><span class="p">.</span><span class="nx">apiKey</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nx">apiKey</span><span class="w"> </span><span class="o">||</span><span class="w"> </span><span class="nx">process</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">PROVCHAIN_API_KEY</span><span class="p">;</span>
<span class="w">        </span><span class="k">this</span><span class="p">.</span><span class="nx">secretKey</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nx">secretKey</span><span class="w"> </span><span class="o">||</span><span class="w"> </span><span class="nx">process</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">PROVCHAIN_SECRET_KEY</span><span class="p">;</span>
<span class="w">    </span><span class="p">}</span>

<span class="w">    </span><span class="k">async</span><span class="w"> </span><span class="nx">makeRequest</span><span class="p">(</span><span class="nx">method</span><span class="p">,</span><span class="w"> </span><span class="nx">endpoint</span><span class="p">,</span><span class="w"> </span><span class="nx">data</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">null</span><span class="p">)</span><span class="w"> </span><span class="p">{</span>
<span class="w">        </span><span class="kd">const</span><span class="w"> </span><span class="nx">url</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="sb">`</span><span class="si">${</span><span class="k">this</span><span class="p">.</span><span class="nx">baseUrl</span><span class="si">}${</span><span class="nx">endpoint</span><span class="si">}</span><span class="sb">`</span><span class="p">;</span>
<span class="w">        </span><span class="kd">const</span><span class="w"> </span><span class="nx">headers</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">{</span>
<span class="w">            </span><span class="s1">&#39;Authorization&#39;</span><span class="o">:</span><span class="w"> </span><span class="sb">`Bearer </span><span class="si">${</span><span class="k">this</span><span class="p">.</span><span class="nx">apiKey</span><span class="si">}</span><span class="sb">`</span><span class="p">,</span>
<span class="w">            </span><span class="s1">&#39;Content-Type&#39;</span><span class="o">:</span><span class="w"> </span><span class="s1">&#39;application/json&#39;</span>
<span class="w">        </span><span class="p">};</span>

<span class="w">        </span><span class="c1">// Add HMAC signature for write operations</span>
<span class="w">        </span><span class="k">if</span><span class="w"> </span><span class="p">([</span><span class="s1">&#39;POST&#39;</span><span class="p">,</span><span class="w"> </span><span class="s1">&#39;PUT&#39;</span><span class="p">,</span><span class="w"> </span><span class="s1">&#39;DELETE&#39;</span><span class="p">].</span><span class="nx">includes</span><span class="p">(</span><span class="nx">method</span><span class="p">)</span><span class="w"> </span><span class="o">&amp;&amp;</span><span class="w"> </span><span class="k">this</span><span class="p">.</span><span class="nx">secretKey</span><span class="p">)</span><span class="w"> </span><span class="p">{</span>
<span class="w">            </span><span class="kd">const</span><span class="w"> </span><span class="p">{</span><span class="w"> </span><span class="nx">signature</span><span class="p">,</span><span class="w"> </span><span class="nx">timestamp</span><span class="w"> </span><span class="p">}</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="k">await</span><span class="w"> </span><span class="k">this</span><span class="p">.</span><span class="nx">_generateHmacSignature</span><span class="p">(</span>
<span class="w">                </span><span class="nx">method</span><span class="p">,</span><span class="w"> </span><span class="nx">endpoint</span><span class="p">,</span><span class="w"> </span><span class="nx">data</span><span class="w"> </span><span class="o">?</span><span class="w"> </span><span class="nb">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="nx">data</span><span class="p">)</span><span class="w"> </span><span class="o">:</span><span class="w"> </span><span class="s1">&#39;&#39;</span>
<span class="w">            </span><span class="p">);</span>
<span class="w">            </span><span class="nx">headers</span><span class="p">[</span><span class="s1">&#39;X-Timestamp&#39;</span><span class="p">]</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nx">timestamp</span><span class="p">;</span>
<span class="w">            </span><span class="nx">headers</span><span class="p">[</span><span class="s1">&#39;X-Signature&#39;</span><span class="p">]</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nx">signature</span><span class="p">;</span>
<span class="w">        </span><span class="p">}</span>

<span class="w">        </span><span class="kd">const</span><span class="w"> </span><span class="nx">response</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="k">await</span><span class="w"> </span><span class="nx">fetch</span><span class="p">(</span><span class="nx">url</span><span class="p">,</span><span class="w"> </span><span class="p">{</span>
<span class="w">            </span><span class="nx">method</span><span class="p">,</span>
<span class="w">            </span><span class="nx">headers</span><span class="p">,</span>
<span class="w">            </span><span class="nx">body</span><span class="o">:</span><span class="w"> </span><span class="nx">data</span><span class="w"> </span><span class="o">?</span><span class="w"> </span><span class="nb">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="nx">data</span><span class="p">)</span><span class="w"> </span><span class="o">:</span><span class="w"> </span><span class="kc">undefined</span>
<span class="w">        </span><span class="p">});</span>

<span class="w">        </span><span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="o">!</span><span class="nx">response</span><span class="p">.</span><span class="nx">ok</span><span class="p">)</span><span class="w"> </span><span class="p">{</span>
<span class="w">            </span><span class="k">throw</span><span class="w"> </span><span class="ow">new</span><span class="w"> </span><span class="ne">Error</span><span class="p">(</span><span class="sb">`HTTP error! status: </span><span class="si">${</span><span class="nx">response</span><span class="p">.</span><span class="nx">status</span><span class="si">}</span><span class="sb">`</span><span class="p">);</span>
<span class="w">        </span><span class="p">}</span>

<span class="w">        </span><span class="k">return</span><span class="w"> </span><span class="k">await</span><span class="w"> </span><span class="nx">response</span><span class="p">.</span><span class="nx">json</span><span class="p">();</span>
<span class="w">    </span><span class="p">}</span>

<span class="w">    </span><span class="k">async</span><span class="w"> </span><span class="nx">_generateHmacSignature</span><span class="p">(</span><span class="nx">method</span><span class="p">,</span><span class="w"> </span><span class="nx">endpoint</span><span class="p">,</span><span class="w"> </span><span class="nx">body</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s1">&#39;&#39;</span><span class="p">)</span><span class="w"> </span><span class="p">{</span>
<span class="w">        </span><span class="kd">const</span><span class="w"> </span><span class="nx">timestamp</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nb">Date</span><span class="p">.</span><span class="nx">now</span><span class="p">()</span><span class="w"> </span><span class="o">/</span><span class="w"> </span><span class="mf">1000</span><span class="p">).</span><span class="nx">toString</span><span class="p">();</span>
<span class="w">        </span><span class="kd">const</span><span class="w"> </span><span class="nx">signatureString</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="sb">`</span><span class="si">${</span><span class="nx">method</span><span class="si">}</span><span class="sb">\n</span><span class="si">${</span><span class="nx">endpoint</span><span class="si">}</span><span class="sb">\n</span><span class="si">${</span><span class="nx">body</span><span class="si">}</span><span class="sb">\n</span><span class="si">${</span><span class="nx">timestamp</span><span class="si">}</span><span class="sb">`</span><span class="p">;</span>

<span class="w">        </span><span class="kd">const</span><span class="w"> </span><span class="nx">encoder</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="ow">new</span><span class="w"> </span><span class="nx">TextEncoder</span><span class="p">();</span>
<span class="w">        </span><span class="kd">const</span><span class="w"> </span><span class="nx">key</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="k">await</span><span class="w"> </span><span class="nx">crypto</span><span class="p">.</span><span class="nx">subtle</span><span class="p">.</span><span class="nx">importKey</span><span class="p">(</span>
<span class="w">            </span><span class="s1">&#39;raw&#39;</span><span class="p">,</span>
<span class="w">            </span><span class="nx">encoder</span><span class="p">.</span><span class="nx">encode</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">secretKey</span><span class="p">),</span>
<span class="w">            </span><span class="p">{</span><span class="w"> </span><span class="nx">name</span><span class="o">:</span><span class="w"> </span><span class="s1">&#39;HMAC&#39;</span><span class="p">,</span><span class="w"> </span><span class="nx">hash</span><span class="o">:</span><span class="w"> </span><span class="s1">&#39;SHA-256&#39;</span><span class="w"> </span><span class="p">},</span>
<span class="w">            </span><span class="kc">false</span><span class="p">,</span>
<span class="w">            </span><span class="p">[</span><span class="s1">&#39;sign&#39;</span><span class="p">]</span>
<span class="w">        </span><span class="p">);</span>

<span class="w">        </span><span class="kd">const</span><span class="w"> </span><span class="nx">signature</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="k">await</span><span class="w"> </span><span class="nx">crypto</span><span class="p">.</span><span class="nx">subtle</span><span class="p">.</span><span class="nx">sign</span><span class="p">(</span>
<span class="w">            </span><span class="s1">&#39;HMAC&#39;</span><span class="p">,</span>
<span class="w">            </span><span class="nx">key</span><span class="p">,</span>
<span class="w">            </span><span class="nx">encoder</span><span class="p">.</span><span class="nx">encode</span><span class="p">(</span><span class="nx">signatureString</span><span class="p">)</span>
<span class="w">        </span><span class="p">);</span>

<span class="w">        </span><span class="kd">const</span><span class="w"> </span><span class="nx">signatureB64</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nx">btoa</span><span class="p">(</span><span class="nb">String</span><span class="p">.</span><span class="nx">fromCharCode</span><span class="p">(...</span><span class="ow">new</span><span class="w"> </span><span class="nb">Uint8Array</span><span class="p">(</span><span class="nx">signature</span><span class="p">)));</span>
<span class="w">        </span><span class="k">return</span><span class="w"> </span><span class="p">{</span><span class="w"> </span><span class="nx">signature</span><span class="o">:</span><span class="w"> </span><span class="nx">signatureB64</span><span class="p">,</span><span class="w"> </span><span class="nx">timestamp</span><span class="w"> </span><span class="p">};</span>
<span class="w">    </span><span class="p">}</span>
<span class="p">}</span>
</pre></div>
</div>
</section>
</section>
<section id="getting-help">
<h2>Getting Help</h2>
<p>For authentication-related issues:</p>
<ol class="arabic simple">
<li><p><strong>Check Documentation</strong>: Review this authentication guide</p></li>
<li><p><strong>Review Error Messages</strong>: Examine detailed error responses</p></li>
<li><p><strong>Check Logs</strong>: Review audit logs for authentication attempts</p></li>
<li><p><strong>Contact Support</strong>: Reach out for enterprise support when needed</p></li>
</ol>
<p><strong>Support Channels:</strong>
- <strong>Documentation</strong>: Comprehensive guides and API references
- <strong>Issue Tracker</strong>: Report bugs and feature requests
- <strong>Community Forum</strong>: Peer support and best practices
- <strong>Enterprise Support</strong>: Commercial support options</p>
<div class="footer-note">
  <p><strong>Need help with authentication?</strong> Check the <a href="client-libraries.html">Client Libraries</a> for ready-to-use implementations or visit our <a href="https://github.com/provchain-org">GitHub repositories</a> for examples.</p>
</div></section>
</section>


            <div class="clearer"></div>
          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>